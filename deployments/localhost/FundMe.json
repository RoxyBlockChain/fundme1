{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x883724187f903a560f2c130d06d92ca0fa35af2c1cb1c8ce252e49763dcf5328",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1156631",
    "logsBloom": "0x
    "blockHash": "0xcff7e49b35e59f245ec26b454565cd5ccd785ee5525310e5ea841db1de896381",
    "transactionHash": "0x883724187f903a560f2c130d06d92ca0fa35af2c1cb1c8ce252e49763dcf5328",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1156631",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "520fc0238099c7538ae17d2fca318a8e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Patrick Collins\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the address of the funder\"},\"returns\":{\"_0\":\"the amount funded\"}}},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"Funds our contract based on the ETH/USD price\"},\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded\"}},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// 1. Pragma\\r\\npragma solidity ^0.8.0;\\r\\n// 2. Imports\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\n// 3. Interfaces, Libraries, Contracts\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\n/**@title A sample Funding Contract\\r\\n * @author Patrick Collins\\r\\n * @notice This contract is for creating a sample funding contract\\r\\n * @dev This implements price feeds as our library\\r\\n */\\r\\ncontract FundMe {\\r\\n    // Type Declarations\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    // State variables\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\r\\n    address public immutable i_owner;\\r\\n    address[] public s_funders;\\r\\n    mapping(address => uint256) public s_addressToAmountFunded;\\r\\n    AggregatorV3Interface public s_priceFeed;\\r\\n\\r\\n    // Events (we have none!)\\r\\n\\r\\n    // Modifiers\\r\\n    modifier onlyOwner() {\\r\\n        // require(msg.sender == i_owner);\\r\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Functions Order:\\r\\n    //// constructor\\r\\n    //// receive\\r\\n    //// fallback\\r\\n    //// external\\r\\n    //// public\\r\\n    //// internal\\r\\n    //// private\\r\\n    //// view / pure\\r\\n\\r\\n    constructor(address priceFeed) {\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\r\\n        i_owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    /// @notice Funds our contract based on the ETH/USD price\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\r\\n            \\\"You need to spend more ETH!\\\"\\r\\n        );\\r\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n        s_funders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < s_funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = s_funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        // Transfer vs call vs Send\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public onlyOwner {\\r\\n        address[] memory funders = s_funders;\\r\\n        // mappings can't be in memory, sorry!\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n    }\\r\\n\\r\\n    /** @notice Gets the amount that an address has funded\\r\\n     *  @param fundingAddress the address of the funder\\r\\n     *  @return the amount funded\\r\\n     */\\r\\n    function getAddressToAmountFunded(address fundingAddress)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return s_addressToAmountFunded[fundingAddress];\\r\\n    }\\r\\n\\r\\n    function getVersion() public view returns (uint256) {\\r\\n        return s_priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getFunder(uint256 index) public view returns (address) {\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe9c4cb73a2027bebd4d9d403c001c2f1f4919c4518616c9adc06775f27f250a1\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n  function getPrice(AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n    // ETH/USD rate in 18 digit\\r\\n    return uint256(answer * 10000000000);\\r\\n  }\\r\\n\\r\\n  // 1000000000\\r\\n  // call it get fiatConversionRate, since it assumes something about decimals\\r\\n  // It wouldn't work for every aggregator\\r\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    uint256 ethPrice = getPrice(priceFeed);\\r\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n    // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\r\\n    return ethAmountInUsd;\\r\\n  }\\r\\n}\",\"keccak256\":\"0x71436c7ce21826b157415348e920ae3442ae5d87b75ff05a8b88fc5e7ed6306f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200152238038062001522833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61138e6200019460003960008181610425015281816105b80152818161069d0152818161082801528181610a1e0152610afd015261138e6000f3fe6080604052600436106100c25760003560e01c80636b69a5921161007f578063b60d428811610059578063b60d42881461026c578063be2693f014610276578063d7b4750c1461028d578063dba6335f146102ca576100c2565b80636b69a592146101eb578063893d20e8146102165780639e87a5cd14610241576100c2565b80630343fb25146100c75780630d8e6e2c146101045780630ec3b0271461012f5780631bf6132d1461015a5780633ccfd60b1461019757806354861af7146101ae575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190610d05565b6102f5565b6040516100fb9190610d4b565b60405180910390f35b34801561011057600080fd5b5061011961033e565b6040516101269190610d4b565b60405180910390f35b34801561013b57600080fd5b506101446103e5565b6040516101519190610dc5565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c9190610d05565b61040b565b60405161018e9190610d4b565b60405180910390f35b3480156101a357600080fd5b506101ac610423565b005b3480156101ba57600080fd5b506101d560048036038101906101d09190610e0c565b61064d565b6040516101e29190610e48565b60405180910390f35b3480156101f757600080fd5b5061020061068c565b60405161020d9190610d4b565b60405180910390f35b34801561022257600080fd5b5061022b610699565b6040516102389190610e48565b60405180910390f35b34801561024d57600080fd5b506102566106c1565b6040516102639190610dc5565b60405180910390f35b6102746106eb565b005b34801561028257600080fd5b5061028b610826565b005b34801561029957600080fd5b506102b460048036038101906102af9190610e0c565b610ab4565b6040516102c19190610e48565b60405180910390f35b3480156102d657600080fd5b506102df610afb565b6040516102ec9190610e48565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103a857600080fd5b505afa1580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e09190610e78565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105535760008082815481106104cd576104cc610ea5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061054b90610f03565b9150506104ab565b50600067ffffffffffffffff81111561056f5761056e610f4c565b5b60405190808252806020026020018201604052801561059d5781602001602082028036833780820191505090505b50600090805190602001906105b3929190610bfb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516105fa90610fac565b60006040518083038185875af1925050503d8060008114610637576040519150601f19603f3d011682016040523d82523d6000602084013e61063c565b606091505b505090508061064a57600080fd5b50565b6000818154811061065d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061072a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610b1f90919063ffffffff16565b101561076b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107629061101e565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107ba919061103e565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ab576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561092e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116108e4575b5050505050905060005b81518110156109b957600082828151811061095657610955610ea5565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806109b190610f03565b915050610938565b50600067ffffffffffffffff8111156109d5576109d4610f4c565b5b604051908082528060200260200182016040528015610a035781602001602082028036833780820191505090505b5060009080519060200190610a19929190610bfb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1647604051610a6090610fac565b60006040518083038185875af1925050503d8060008114610a9d576040519150601f19603f3d011682016040523d82523d6000602084013e610aa2565b606091505b5050905080610ab057600080fd5b5050565b6000808281548110610ac957610ac8610ea5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610b2b83610b5b565b90506000670de0b6b3a76400008583610b449190611094565b610b4e919061111d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610ba457600080fd5b505afa158015610bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdc91906111c6565b5050509150506402540be40081610bf39190611241565b915050919050565b828054828255906000526020600020908101928215610c74579160200282015b82811115610c735782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c1b565b5b509050610c819190610c85565b5090565b5b80821115610c9e576000816000905550600101610c86565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cd282610ca7565b9050919050565b610ce281610cc7565b8114610ced57600080fd5b50565b600081359050610cff81610cd9565b92915050565b600060208284031215610d1b57610d1a610ca2565b5b6000610d2984828501610cf0565b91505092915050565b6000819050919050565b610d4581610d32565b82525050565b6000602082019050610d606000830184610d3c565b92915050565b6000819050919050565b6000610d8b610d86610d8184610ca7565b610d66565b610ca7565b9050919050565b6000610d9d82610d70565b9050919050565b6000610daf82610d92565b9050919050565b610dbf81610da4565b82525050565b6000602082019050610dda6000830184610db6565b92915050565b610de981610d32565b8114610df457600080fd5b50565b600081359050610e0681610de0565b92915050565b600060208284031215610e2257610e21610ca2565b5b6000610e3084828501610df7565b91505092915050565b610e4281610cc7565b82525050565b6000602082019050610e5d6000830184610e39565b92915050565b600081519050610e7281610de0565b92915050565b600060208284031215610e8e57610e8d610ca2565b5b6000610e9c84828501610e63565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f0e82610d32565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f4157610f40610ed4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f96600083610f7b565b9150610fa182610f86565b600082019050919050565b6000610fb782610f89565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000611008601b83610fc1565b915061101382610fd2565b602082019050919050565b6000602082019050818103600083015261103781610ffb565b9050919050565b600061104982610d32565b915061105483610d32565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561108957611088610ed4565b5b828201905092915050565b600061109f82610d32565b91506110aa83610d32565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110e3576110e2610ed4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061112882610d32565b915061113383610d32565b925082611143576111426110ee565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61116d8161114e565b811461117857600080fd5b50565b60008151905061118a81611164565b92915050565b6000819050919050565b6111a381611190565b81146111ae57600080fd5b50565b6000815190506111c08161119a565b92915050565b600080600080600060a086880312156111e2576111e1610ca2565b5b60006111f08882890161117b565b9550506020611201888289016111b1565b945050604061121288828901610e63565b935050606061122388828901610e63565b92505060806112348882890161117b565b9150509295509295909350565b600061124c82611190565b915061125783611190565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561129657611295610ed4565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156112d3576112d2610ed4565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156113105761130f610ed4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561134d5761134c610ed4565b5b82820290509291505056fea2646970667358221220e31f8783ee0652b39099361741ff7e11622fa26e86f570e53eda94a6e843b06b64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80636b69a5921161007f578063b60d428811610059578063b60d42881461026c578063be2693f014610276578063d7b4750c1461028d578063dba6335f146102ca576100c2565b80636b69a592146101eb578063893d20e8146102165780639e87a5cd14610241576100c2565b80630343fb25146100c75780630d8e6e2c146101045780630ec3b0271461012f5780631bf6132d1461015a5780633ccfd60b1461019757806354861af7146101ae575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190610d05565b6102f5565b6040516100fb9190610d4b565b60405180910390f35b34801561011057600080fd5b5061011961033e565b6040516101269190610d4b565b60405180910390f35b34801561013b57600080fd5b506101446103e5565b6040516101519190610dc5565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c9190610d05565b61040b565b60405161018e9190610d4b565b60405180910390f35b3480156101a357600080fd5b506101ac610423565b005b3480156101ba57600080fd5b506101d560048036038101906101d09190610e0c565b61064d565b6040516101e29190610e48565b60405180910390f35b3480156101f757600080fd5b5061020061068c565b60405161020d9190610d4b565b60405180910390f35b34801561022257600080fd5b5061022b610699565b6040516102389190610e48565b60405180910390f35b34801561024d57600080fd5b506102566106c1565b6040516102639190610dc5565b60405180910390f35b6102746106eb565b005b34801561028257600080fd5b5061028b610826565b005b34801561029957600080fd5b506102b460048036038101906102af9190610e0c565b610ab4565b6040516102c19190610e48565b60405180910390f35b3480156102d657600080fd5b506102df610afb565b6040516102ec9190610e48565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103a857600080fd5b505afa1580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e09190610e78565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105535760008082815481106104cd576104cc610ea5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061054b90610f03565b9150506104ab565b50600067ffffffffffffffff81111561056f5761056e610f4c565b5b60405190808252806020026020018201604052801561059d5781602001602082028036833780820191505090505b50600090805190602001906105b3929190610bfb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516105fa90610fac565b60006040518083038185875af1925050503d8060008114610637576040519150601f19603f3d011682016040523d82523d6000602084013e61063c565b606091505b505090508061064a57600080fd5b50565b6000818154811061065d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061072a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610b1f90919063ffffffff16565b101561076b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107629061101e565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107ba919061103e565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108ab576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561092e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116108e4575b5050505050905060005b81518110156109b957600082828151811061095657610955610ea5565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806109b190610f03565b915050610938565b50600067ffffffffffffffff8111156109d5576109d4610f4c565b5b604051908082528060200260200182016040528015610a035781602001602082028036833780820191505090505b5060009080519060200190610a19929190610bfb565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1647604051610a6090610fac565b60006040518083038185875af1925050503d8060008114610a9d576040519150601f19603f3d011682016040523d82523d6000602084013e610aa2565b606091505b5050905080610ab057600080fd5b5050565b6000808281548110610ac957610ac8610ea5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610b2b83610b5b565b90506000670de0b6b3a76400008583610b449190611094565b610b4e919061111d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610ba457600080fd5b505afa158015610bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdc91906111c6565b5050509150506402540be40081610bf39190611241565b915050919050565b828054828255906000526020600020908101928215610c74579160200282015b82811115610c735782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610c1b565b5b509050610c819190610c85565b5090565b5b80821115610c9e576000816000905550600101610c86565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cd282610ca7565b9050919050565b610ce281610cc7565b8114610ced57600080fd5b50565b600081359050610cff81610cd9565b92915050565b600060208284031215610d1b57610d1a610ca2565b5b6000610d2984828501610cf0565b91505092915050565b6000819050919050565b610d4581610d32565b82525050565b6000602082019050610d606000830184610d3c565b92915050565b6000819050919050565b6000610d8b610d86610d8184610ca7565b610d66565b610ca7565b9050919050565b6000610d9d82610d70565b9050919050565b6000610daf82610d92565b9050919050565b610dbf81610da4565b82525050565b6000602082019050610dda6000830184610db6565b92915050565b610de981610d32565b8114610df457600080fd5b50565b600081359050610e0681610de0565b92915050565b600060208284031215610e2257610e21610ca2565b5b6000610e3084828501610df7565b91505092915050565b610e4281610cc7565b82525050565b6000602082019050610e5d6000830184610e39565b92915050565b600081519050610e7281610de0565b92915050565b600060208284031215610e8e57610e8d610ca2565b5b6000610e9c84828501610e63565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f0e82610d32565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f4157610f40610ed4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f96600083610f7b565b9150610fa182610f86565b600082019050919050565b6000610fb782610f89565b9150819050919050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000611008601b83610fc1565b915061101382610fd2565b602082019050919050565b6000602082019050818103600083015261103781610ffb565b9050919050565b600061104982610d32565b915061105483610d32565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561108957611088610ed4565b5b828201905092915050565b600061109f82610d32565b91506110aa83610d32565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110e3576110e2610ed4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061112882610d32565b915061113383610d32565b925082611143576111426110ee565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61116d8161114e565b811461117857600080fd5b50565b60008151905061118a81611164565b92915050565b6000819050919050565b6111a381611190565b81146111ae57600080fd5b50565b6000815190506111c08161119a565b92915050565b600080600080600060a086880312156111e2576111e1610ca2565b5b60006111f08882890161117b565b9550506020611201888289016111b1565b945050604061121288828901610e63565b935050606061122388828901610e63565b92505060806112348882890161117b565b9150509295509295909350565b600061124c82611190565b915061125783611190565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561129657611295610ed4565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156112d3576112d2610ed4565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156113105761130f610ed4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561134d5761134c610ed4565b5b82820290509291505056fea2646970667358221220e31f8783ee0652b39099361741ff7e11622fa26e86f570e53eda94a6e843b06b64736f6c63430008080033",
  "devdoc": {
    "author": "Patrick Collins",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "the address of the funder"
        },
        "returns": {
          "_0": "the amount funded"
        }
      }
    },
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "Funds our contract based on the ETH/USD price"
      },
      "getAddressToAmountFunded(address)": {
        "notice": "Gets the amount that an address has funded"
      }
    },
    "notice": "This contract is for creating a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}